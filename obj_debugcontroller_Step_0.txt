if DEBUG
{
	scr_init_input_practice()
	scr_getinput_practice()
	
	if (reload_room)
    {
        ds_list_copy(global.saveroom, global.currentsaveroom)
        ds_list_copy(global.escaperoom, global.currentescaperoom)
        ds_list_copy(global.baddieroom, global.currentbaddieroom)
        ds_list_copy(global.debris_list, global.currentdebris_list)
        ds_list_copy(global.collect_list, global.currentcollect_list)
        global.shroomfollow = global.currentshroomfollow
        global.cheesefollow = global.currentcheesefollow
        global.tomatofollow = global.currenttomatofollow
        global.sausagefollow = global.currentsausagefollow
        global.pineapplefollow = global.currentpineapplefollow
        global.key_inv = global.currentkey_inv
        global.keyget = global.currentkeyget
        global.gerome = global.currentgerome
        obj_player.targetRoom = global.currentroom
        obj_player.targetDoor = global.currentdoor
        if (global.gerome && (!instance_exists(obj_geromefollow)))
            instance_create(obj_player.x, obj_player.y, obj_geromefollow)
        if (global.keyget && global.key_inv && (!instance_exists(obj_keyfollow)))
            instance_create(obj_player.x, obj_player.y, obj_keyfollow)
        scr_room_goto(obj_player.targetRoom)
    }
	
    if (last_room)
    {
        ds_list_copy(global.saveroom, global.lastsaveroom)
        ds_list_copy(global.escaperoom, global.lastescaperoom)
        ds_list_copy(global.baddieroom, global.lastbaddieroom)
        ds_list_copy(global.debris_list, global.lastdebris_list)
        ds_list_copy(global.collect_list, global.lastcollect_list)
        global.shroomfollow = global.lastshroomfollow
        global.cheesefollow = global.lastcheesefollow
        global.tomatofollow = global.lasttomatofollow
        global.sausagefollow = global.lastsausagefollow
        global.pineapplefollow = global.lastpineapplefollow
        global.key_inv = global.lastkey_inv
        global.keyget = global.lastkeyget
        global.gerome = global.lastgerome
        obj_player.targetRoom = global.lastroom
        obj_player.targetDoor = global.lastdoor
        if (global.gerome && (!instance_exists(obj_geromefollow)))
            instance_create(obj_player.x, obj_player.y, obj_geromefollow)
        if (global.keyget && global.key_inv && (!instance_exists(obj_keyfollow)))
            instance_create(obj_player.x, obj_player.y, obj_keyfollow)
        scr_room_goto(obj_player.targetRoom)
    }
	
	if (noclip)
	{
		self.DoCommand("noclip")
	}

	if (last_command)
	{
		self.DoCommand(global.lastcommand)
	}
		
	if (show_collisions)
	{
		global.showcollisions = !global.showcollisions
	
        if (global.showcollisions == 1)
            self.DoCommand("showcollisions true")
        if (global.showcollisions == 0)
            self.DoCommand("showcollisions false")
	}
	
	if (debug)
	{
		active = (!active)
		keyboard_string = ""
	}

    if active
    {
        var _search = 0
        if (keyboard_check(vk_anykey) && (!keyboard_check(global.debug)))
        {
            input_text += keyboard_string
            for (var i = 0; i < string_length(keyboard_string); i++)
            {
                var b = string_char_at(keyboard_string, (i + 1))
                var d = string_upper(b)
                if (d == "")
                    d = string_lettersdigits(b)
                keyboard_key_release(ord(d))
            }
            keyboard_string = ""
            _search = 1
        }
        if keyboard_check(vk_backspace)
        {
            input_text = string_delete(input_text, string_length(input_text), 1)
            keyboard_key_release(vk_backspace)
            _search = 1
        }
        if keyboard_check_pressed(vk_return)
        {
            self.DoCommand(input_text)
            global.lastcommand = input_text
            input_text = ""
            keyboard_string = ""
            _search = 1
            active = 0
        }
        if keyboard_check_pressed(vk_tab)
        {
            search_w = 0
            for (i = 0; i < ds_list_size(command_list); i++)
            {
                b = ds_list_find_value(command_list, i)
                var s = b.command_id
                d = string_split(input_text, " ")
                var t = d[0]
                if (string_copy(s, 1, string_length(t)) == t)
                {
                    var txt = b.command_id
                    if (input_text != txt)
                    {
                        input_text = txt
                        i = ds_list_size(command_list)
                    }
                }
            }
        }
        if _search
        {
            ds_list_clear(search_commands)
            search_w = 0
            for (i = 0; i < ds_list_size(command_list); i++)
            {
                b = ds_list_find_value(command_list, i)
                s = b.command_id
                d = string_split(input_text, " ")
                t = d[0]
                if (string_copy(s, 1, string_length(t)) == t)
                {
                    txt = concat(b.command_id, " ", b.format, " - ", b.description)
                    ds_list_add(search_commands, txt)
                    var w = string_width(txt)
                    if (w > search_w)
                        search_w = w
                }
            }
        }
    }
}
